{"ast":null,"code":"// pkg/dist-src/index.js\nimport { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\n\n// pkg/dist-src/get-oauth-access-token.js\nimport { createDeviceCode, exchangeDeviceCode } from \"@octokit/oauth-methods\";\nasync function getOAuthAccessToken(state, options) {\n  const cachedAuthentication = getCachedAuthentication(state, options.auth);\n  if (cachedAuthentication) return cachedAuthentication;\n  const {\n    data: verification\n  } = await createDeviceCode({\n    clientType: state.clientType,\n    clientId: state.clientId,\n    request: options.request || state.request,\n    // @ts-expect-error the extra code to make TS happy is not worth it\n    scopes: options.auth.scopes || state.scopes\n  });\n  await state.onVerification(verification);\n  const authentication = await waitForAccessToken(options.request || state.request, state.clientId, state.clientType, verification);\n  state.authentication = authentication;\n  return authentication;\n}\nfunction getCachedAuthentication(state, auth2) {\n  if (auth2.refresh === true) return false;\n  if (!state.authentication) return false;\n  if (state.clientType === \"github-app\") {\n    return state.authentication;\n  }\n  const authentication = state.authentication;\n  const newScope = (\"scopes\" in auth2 && auth2.scopes || state.scopes).join(\" \");\n  const currentScope = authentication.scopes.join(\" \");\n  return newScope === currentScope ? authentication : false;\n}\nasync function wait(seconds) {\n  await new Promise(resolve => setTimeout(resolve, seconds * 1e3));\n}\nasync function waitForAccessToken(request, clientId, clientType, verification) {\n  try {\n    const options = {\n      clientId,\n      request,\n      code: verification.device_code\n    };\n    const {\n      authentication\n    } = clientType === \"oauth-app\" ? await exchangeDeviceCode({\n      ...options,\n      clientType: \"oauth-app\"\n    }) : await exchangeDeviceCode({\n      ...options,\n      clientType: \"github-app\"\n    });\n    return {\n      type: \"token\",\n      tokenType: \"oauth\",\n      ...authentication\n    };\n  } catch (error) {\n    if (!error.response) throw error;\n    const errorType = error.response.data.error;\n    if (errorType === \"authorization_pending\") {\n      await wait(verification.interval);\n      return waitForAccessToken(request, clientId, clientType, verification);\n    }\n    if (errorType === \"slow_down\") {\n      await wait(verification.interval + 5);\n      return waitForAccessToken(request, clientId, clientType, verification);\n    }\n    throw error;\n  }\n}\n\n// pkg/dist-src/auth.js\nasync function auth(state, authOptions) {\n  return getOAuthAccessToken(state, {\n    auth: authOptions\n  });\n}\n\n// pkg/dist-src/hook.js\nasync function hook(state, request, route, parameters) {\n  let endpoint = request.endpoint.merge(route, parameters);\n  if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n    return request(endpoint);\n  }\n  const {\n    token\n  } = await getOAuthAccessToken(state, {\n    request,\n    auth: {\n      type: \"oauth\"\n    }\n  });\n  endpoint.headers.authorization = `token ${token}`;\n  return request(endpoint);\n}\n\n// pkg/dist-src/version.js\nvar VERSION = \"6.0.1\";\n\n// pkg/dist-src/index.js\nfunction createOAuthDeviceAuth(options) {\n  const requestWithDefaults = options.request || octokitRequest.defaults({\n    headers: {\n      \"user-agent\": `octokit-auth-oauth-device.js/${VERSION} ${getUserAgent()}`\n    }\n  });\n  const {\n    request = requestWithDefaults,\n    ...otherOptions\n  } = options;\n  const state = options.clientType === \"github-app\" ? {\n    ...otherOptions,\n    clientType: \"github-app\",\n    request\n  } : {\n    ...otherOptions,\n    clientType: \"oauth-app\",\n    request,\n    scopes: options.scopes || []\n  };\n  if (!options.clientId) {\n    throw new Error('[@octokit/auth-oauth-device] \"clientId\" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');\n  }\n  if (!options.onVerification) {\n    throw new Error('[@octokit/auth-oauth-device] \"onVerification\" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');\n  }\n  return Object.assign(auth.bind(null, state), {\n    hook: hook.bind(null, state)\n  });\n}\nexport { createOAuthDeviceAuth };","map":{"version":3,"names":["getUserAgent","request","octokitRequest","createDeviceCode","exchangeDeviceCode","getOAuthAccessToken","state","options","cachedAuthentication","getCachedAuthentication","auth","data","verification","clientType","clientId","scopes","onVerification","authentication","waitForAccessToken","auth2","refresh","newScope","join","currentScope","wait","seconds","Promise","resolve","setTimeout","code","device_code","type","tokenType","error","response","errorType","interval","authOptions","hook","route","parameters","endpoint","merge","test","url","token","headers","authorization","VERSION","createOAuthDeviceAuth","requestWithDefaults","defaults","otherOptions","Error","Object","assign","bind"],"sources":["C:/Users/Prateek/Desktop/College_Stuff/Fall_2023_Co-op_Semester/MakeUC/Find_your_repository/node_modules/@octokit/auth-oauth-device/dist-web/index.js"],"sourcesContent":["// pkg/dist-src/index.js\nimport { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\n\n// pkg/dist-src/get-oauth-access-token.js\nimport { createDeviceCode, exchangeDeviceCode } from \"@octokit/oauth-methods\";\nasync function getOAuthAccessToken(state, options) {\n  const cachedAuthentication = getCachedAuthentication(state, options.auth);\n  if (cachedAuthentication)\n    return cachedAuthentication;\n  const { data: verification } = await createDeviceCode({\n    clientType: state.clientType,\n    clientId: state.clientId,\n    request: options.request || state.request,\n    // @ts-expect-error the extra code to make TS happy is not worth it\n    scopes: options.auth.scopes || state.scopes\n  });\n  await state.onVerification(verification);\n  const authentication = await waitForAccessToken(\n    options.request || state.request,\n    state.clientId,\n    state.clientType,\n    verification\n  );\n  state.authentication = authentication;\n  return authentication;\n}\nfunction getCachedAuthentication(state, auth2) {\n  if (auth2.refresh === true)\n    return false;\n  if (!state.authentication)\n    return false;\n  if (state.clientType === \"github-app\") {\n    return state.authentication;\n  }\n  const authentication = state.authentication;\n  const newScope = (\"scopes\" in auth2 && auth2.scopes || state.scopes).join(\n    \" \"\n  );\n  const currentScope = authentication.scopes.join(\" \");\n  return newScope === currentScope ? authentication : false;\n}\nasync function wait(seconds) {\n  await new Promise((resolve) => setTimeout(resolve, seconds * 1e3));\n}\nasync function waitForAccessToken(request, clientId, clientType, verification) {\n  try {\n    const options = {\n      clientId,\n      request,\n      code: verification.device_code\n    };\n    const { authentication } = clientType === \"oauth-app\" ? await exchangeDeviceCode({\n      ...options,\n      clientType: \"oauth-app\"\n    }) : await exchangeDeviceCode({\n      ...options,\n      clientType: \"github-app\"\n    });\n    return {\n      type: \"token\",\n      tokenType: \"oauth\",\n      ...authentication\n    };\n  } catch (error) {\n    if (!error.response)\n      throw error;\n    const errorType = error.response.data.error;\n    if (errorType === \"authorization_pending\") {\n      await wait(verification.interval);\n      return waitForAccessToken(request, clientId, clientType, verification);\n    }\n    if (errorType === \"slow_down\") {\n      await wait(verification.interval + 5);\n      return waitForAccessToken(request, clientId, clientType, verification);\n    }\n    throw error;\n  }\n}\n\n// pkg/dist-src/auth.js\nasync function auth(state, authOptions) {\n  return getOAuthAccessToken(state, {\n    auth: authOptions\n  });\n}\n\n// pkg/dist-src/hook.js\nasync function hook(state, request, route, parameters) {\n  let endpoint = request.endpoint.merge(\n    route,\n    parameters\n  );\n  if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n    return request(endpoint);\n  }\n  const { token } = await getOAuthAccessToken(state, {\n    request,\n    auth: { type: \"oauth\" }\n  });\n  endpoint.headers.authorization = `token ${token}`;\n  return request(endpoint);\n}\n\n// pkg/dist-src/version.js\nvar VERSION = \"6.0.1\";\n\n// pkg/dist-src/index.js\nfunction createOAuthDeviceAuth(options) {\n  const requestWithDefaults = options.request || octokitRequest.defaults({\n    headers: {\n      \"user-agent\": `octokit-auth-oauth-device.js/${VERSION} ${getUserAgent()}`\n    }\n  });\n  const { request = requestWithDefaults, ...otherOptions } = options;\n  const state = options.clientType === \"github-app\" ? {\n    ...otherOptions,\n    clientType: \"github-app\",\n    request\n  } : {\n    ...otherOptions,\n    clientType: \"oauth-app\",\n    request,\n    scopes: options.scopes || []\n  };\n  if (!options.clientId) {\n    throw new Error(\n      '[@octokit/auth-oauth-device] \"clientId\" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)'\n    );\n  }\n  if (!options.onVerification) {\n    throw new Error(\n      '[@octokit/auth-oauth-device] \"onVerification\" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)'\n    );\n  }\n  return Object.assign(auth.bind(null, state), {\n    hook: hook.bind(null, state)\n  });\n}\nexport {\n  createOAuthDeviceAuth\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}