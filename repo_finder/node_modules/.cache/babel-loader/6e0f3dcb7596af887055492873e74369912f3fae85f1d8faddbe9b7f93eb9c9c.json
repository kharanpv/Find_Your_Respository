{"ast":null,"code":"import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function refreshToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    client_secret: options.clientSecret,\n    grant_type: \"refresh_token\",\n    refresh_token: options.refreshToken\n  });\n  const apiTimeInMs = new Date(response.headers.date).getTime();\n  const authentication = {\n    clientType: \"github-app\",\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    refreshToken: response.data.refresh_token,\n    expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n    refreshTokenExpiresAt: toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in)\n  };\n  return {\n    ...response,\n    authentication\n  };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport { refreshToken };","map":{"version":3,"names":["request","defaultRequest","oauthRequest","refreshToken","options","response","client_id","clientId","client_secret","clientSecret","grant_type","refresh_token","apiTimeInMs","Date","headers","date","getTime","authentication","clientType","token","data","access_token","expiresAt","toTimestamp","expires_in","refreshTokenExpiresAt","refresh_token_expires_in","expirationInSeconds","toISOString"],"sources":["C:/Users/Prateek/Desktop/College_Stuff/Fall_2023_Co-op_Semester/MakeUC/Find_your_repository/node_modules/@octokit/oauth-methods/dist-src/refresh-token.js"],"sourcesContent":["import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function refreshToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(\n    request,\n    \"POST /login/oauth/access_token\",\n    {\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      grant_type: \"refresh_token\",\n      refresh_token: options.refreshToken\n    }\n  );\n  const apiTimeInMs = new Date(response.headers.date).getTime();\n  const authentication = {\n    clientType: \"github-app\",\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    refreshToken: response.data.refresh_token,\n    expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n    refreshTokenExpiresAt: toTimestamp(\n      apiTimeInMs,\n      response.data.refresh_token_expires_in\n    )\n  };\n  return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport {\n  refreshToken\n};\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,cAAc,QAAQ,kBAAkB;AAC5D,SAASC,YAAY,QAAQ,SAAS;AACtC,eAAeC,YAAYA,CAACC,OAAO,EAAE;EACnC,MAAMJ,OAAO,GAAGI,OAAO,CAACJ,OAAO,IAAI;EACnCC,cAAc;EACd,MAAMI,QAAQ,GAAG,MAAMH,YAAY,CACjCF,OAAO,EACP,gCAAgC,EAChC;IACEM,SAAS,EAAEF,OAAO,CAACG,QAAQ;IAC3BC,aAAa,EAAEJ,OAAO,CAACK,YAAY;IACnCC,UAAU,EAAE,eAAe;IAC3BC,aAAa,EAAEP,OAAO,CAACD;EACzB,CACF,CAAC;EACD,MAAMS,WAAW,GAAG,IAAIC,IAAI,CAACR,QAAQ,CAACS,OAAO,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;EAC7D,MAAMC,cAAc,GAAG;IACrBC,UAAU,EAAE,YAAY;IACxBX,QAAQ,EAAEH,OAAO,CAACG,QAAQ;IAC1BE,YAAY,EAAEL,OAAO,CAACK,YAAY;IAClCU,KAAK,EAAEd,QAAQ,CAACe,IAAI,CAACC,YAAY;IACjClB,YAAY,EAAEE,QAAQ,CAACe,IAAI,CAACT,aAAa;IACzCW,SAAS,EAAEC,WAAW,CAACX,WAAW,EAAEP,QAAQ,CAACe,IAAI,CAACI,UAAU,CAAC;IAC7DC,qBAAqB,EAAEF,WAAW,CAChCX,WAAW,EACXP,QAAQ,CAACe,IAAI,CAACM,wBAChB;EACF,CAAC;EACD,OAAO;IAAE,GAAGrB,QAAQ;IAAEY;EAAe,CAAC;AACxC;AACA,SAASM,WAAWA,CAACX,WAAW,EAAEe,mBAAmB,EAAE;EACrD,OAAO,IAAId,IAAI,CAACD,WAAW,GAAGe,mBAAmB,GAAG,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;AACxE;AACA,SACEzB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}