{"ast":null,"code":"import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function exchangeWebFlowCode(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    client_secret: options.clientSecret,\n    code: options.code,\n    redirect_uri: options.redirectUrl\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in);\n    }\n    delete authentication.scopes;\n  }\n  return {\n    ...response,\n    authentication\n  };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport { exchangeWebFlowCode };","map":{"version":3,"names":["request","defaultRequest","oauthRequest","exchangeWebFlowCode","options","response","client_id","clientId","client_secret","clientSecret","code","redirect_uri","redirectUrl","authentication","clientType","token","data","access_token","scopes","scope","split","filter","Boolean","apiTimeInMs","Date","headers","date","getTime","refreshToken","refresh_token","expiresAt","toTimestamp","expires_in","refreshTokenExpiresAt","refresh_token_expires_in","expirationInSeconds","toISOString"],"sources":["C:/Users/Prateek/Desktop/College_Stuff/Fall_2023_Co-op_Semester/MakeUC/Find_your_repository/node_modules/@octokit/oauth-methods/dist-src/exchange-web-flow-code.js"],"sourcesContent":["import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nasync function exchangeWebFlowCode(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await oauthRequest(\n    request,\n    \"POST /login/oauth/access_token\",\n    {\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      code: options.code,\n      redirect_uri: options.redirectUrl\n    }\n  );\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(\n        apiTimeInMs,\n        response.data.expires_in\n      ), authentication.refreshTokenExpiresAt = toTimestamp(\n        apiTimeInMs,\n        response.data.refresh_token_expires_in\n      );\n    }\n    delete authentication.scopes;\n  }\n  return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();\n}\nexport {\n  exchangeWebFlowCode\n};\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,cAAc,QAAQ,kBAAkB;AAC5D,SAASC,YAAY,QAAQ,SAAS;AACtC,eAAeC,mBAAmBA,CAACC,OAAO,EAAE;EAC1C,MAAMJ,OAAO,GAAGI,OAAO,CAACJ,OAAO,IAAI;EACnCC,cAAc;EACd,MAAMI,QAAQ,GAAG,MAAMH,YAAY,CACjCF,OAAO,EACP,gCAAgC,EAChC;IACEM,SAAS,EAAEF,OAAO,CAACG,QAAQ;IAC3BC,aAAa,EAAEJ,OAAO,CAACK,YAAY;IACnCC,IAAI,EAAEN,OAAO,CAACM,IAAI;IAClBC,YAAY,EAAEP,OAAO,CAACQ;EACxB,CACF,CAAC;EACD,MAAMC,cAAc,GAAG;IACrBC,UAAU,EAAEV,OAAO,CAACU,UAAU;IAC9BP,QAAQ,EAAEH,OAAO,CAACG,QAAQ;IAC1BE,YAAY,EAAEL,OAAO,CAACK,YAAY;IAClCM,KAAK,EAAEV,QAAQ,CAACW,IAAI,CAACC,YAAY;IACjCC,MAAM,EAAEb,QAAQ,CAACW,IAAI,CAACG,KAAK,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAACC,OAAO;EACzD,CAAC;EACD,IAAIlB,OAAO,CAACU,UAAU,KAAK,YAAY,EAAE;IACvC,IAAI,eAAe,IAAIT,QAAQ,CAACW,IAAI,EAAE;MACpC,MAAMO,WAAW,GAAG,IAAIC,IAAI,CAACnB,QAAQ,CAACoB,OAAO,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;MAC7Dd,cAAc,CAACe,YAAY,GAAGvB,QAAQ,CAACW,IAAI,CAACa,aAAa,EAAEhB,cAAc,CAACiB,SAAS,GAAGC,WAAW,CAC/FR,WAAW,EACXlB,QAAQ,CAACW,IAAI,CAACgB,UAChB,CAAC,EAAEnB,cAAc,CAACoB,qBAAqB,GAAGF,WAAW,CACnDR,WAAW,EACXlB,QAAQ,CAACW,IAAI,CAACkB,wBAChB,CAAC;IACH;IACA,OAAOrB,cAAc,CAACK,MAAM;EAC9B;EACA,OAAO;IAAE,GAAGb,QAAQ;IAAEQ;EAAe,CAAC;AACxC;AACA,SAASkB,WAAWA,CAACR,WAAW,EAAEY,mBAAmB,EAAE;EACrD,OAAO,IAAIX,IAAI,CAACD,WAAW,GAAGY,mBAAmB,GAAG,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;AACxE;AACA,SACEjC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}