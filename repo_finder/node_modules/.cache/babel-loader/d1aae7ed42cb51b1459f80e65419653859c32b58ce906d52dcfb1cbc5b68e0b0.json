{"ast":null,"code":"import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function checkToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await request(\"POST /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: options.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at) authentication.expiresAt = response.data.expires_at;\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n  return {\n    ...response,\n    authentication\n  };\n}\nexport { checkToken };","map":{"version":3,"names":["request","defaultRequest","btoa","checkToken","options","response","headers","authorization","clientId","clientSecret","client_id","access_token","token","authentication","clientType","scopes","data","expires_at","expiresAt"],"sources":["C:/Users/Prateek/Desktop/College_Stuff/Fall_2023_Co-op_Semester/MakeUC/Find_your_repository/node_modules/@octokit/oauth-methods/dist-src/check-token.js"],"sourcesContent":["import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function checkToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await request(\"POST /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${btoa(\n        `${options.clientId}:${options.clientSecret}`\n      )}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: options.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at)\n    authentication.expiresAt = response.data.expires_at;\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n  return { ...response, authentication };\n}\nexport {\n  checkToken\n};\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,cAAc,QAAQ,kBAAkB;AAC5D,OAAOC,IAAI,MAAM,WAAW;AAC5B,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACjC,MAAMJ,OAAO,GAAGI,OAAO,CAACJ,OAAO,IAAI;EACnCC,cAAc;EACd,MAAMI,QAAQ,GAAG,MAAML,OAAO,CAAC,sCAAsC,EAAE;IACrEM,OAAO,EAAE;MACPC,aAAa,EAAG,SAAQL,IAAI,CACzB,GAAEE,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACK,YAAa,EAC9C,CAAE;IACJ,CAAC;IACDC,SAAS,EAAEN,OAAO,CAACI,QAAQ;IAC3BG,YAAY,EAAEP,OAAO,CAACQ;EACxB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAG;IACrBC,UAAU,EAAEV,OAAO,CAACU,UAAU;IAC9BN,QAAQ,EAAEJ,OAAO,CAACI,QAAQ;IAC1BC,YAAY,EAAEL,OAAO,CAACK,YAAY;IAClCG,KAAK,EAAER,OAAO,CAACQ,KAAK;IACpBG,MAAM,EAAEV,QAAQ,CAACW,IAAI,CAACD;EACxB,CAAC;EACD,IAAIV,QAAQ,CAACW,IAAI,CAACC,UAAU,EAC1BJ,cAAc,CAACK,SAAS,GAAGb,QAAQ,CAACW,IAAI,CAACC,UAAU;EACrD,IAAIb,OAAO,CAACU,UAAU,KAAK,YAAY,EAAE;IACvC,OAAOD,cAAc,CAACE,MAAM;EAC9B;EACA,OAAO;IAAE,GAAGV,QAAQ;IAAEQ;EAAe,CAAC;AACxC;AACA,SACEV,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}