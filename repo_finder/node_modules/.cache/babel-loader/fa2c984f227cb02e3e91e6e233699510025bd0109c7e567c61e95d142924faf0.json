{"ast":null,"code":"// pkg/dist-src/index.js\nimport { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"4.0.1\";\n\n// pkg/dist-src/get-authentication.js\nimport { createOAuthDeviceAuth } from \"@octokit/auth-oauth-device\";\nimport { exchangeWebFlowCode } from \"@octokit/oauth-methods\";\nasync function getAuthentication(state) {\n  if (\"code\" in state.strategyOptions) {\n    const {\n      authentication\n    } = await exchangeWebFlowCode({\n      clientId: state.clientId,\n      clientSecret: state.clientSecret,\n      clientType: state.clientType,\n      onTokenCreated: state.onTokenCreated,\n      ...state.strategyOptions,\n      request: state.request\n    });\n    return {\n      type: \"token\",\n      tokenType: \"oauth\",\n      ...authentication\n    };\n  }\n  if (\"onVerification\" in state.strategyOptions) {\n    const deviceAuth = createOAuthDeviceAuth({\n      clientType: state.clientType,\n      clientId: state.clientId,\n      onTokenCreated: state.onTokenCreated,\n      ...state.strategyOptions,\n      request: state.request\n    });\n    const authentication = await deviceAuth({\n      type: \"oauth\"\n    });\n    return {\n      clientSecret: state.clientSecret,\n      ...authentication\n    };\n  }\n  if (\"token\" in state.strategyOptions) {\n    return {\n      type: \"token\",\n      tokenType: \"oauth\",\n      clientId: state.clientId,\n      clientSecret: state.clientSecret,\n      clientType: state.clientType,\n      onTokenCreated: state.onTokenCreated,\n      ...state.strategyOptions\n    };\n  }\n  throw new Error(\"[@octokit/auth-oauth-user] Invalid strategy options\");\n}\n\n// pkg/dist-src/auth.js\nimport { checkToken, deleteAuthorization, deleteToken, refreshToken, resetToken } from \"@octokit/oauth-methods\";\nasync function auth(state, options = {}) {\n  if (!state.authentication) {\n    state.authentication = state.clientType === \"oauth-app\" ? await getAuthentication(state) : await getAuthentication(state);\n  }\n  if (state.authentication.invalid) {\n    throw new Error(\"[@octokit/auth-oauth-user] Token is invalid\");\n  }\n  const currentAuthentication = state.authentication;\n  if (\"expiresAt\" in currentAuthentication) {\n    if (options.type === \"refresh\" || new Date(currentAuthentication.expiresAt) < /* @__PURE__ */new Date()) {\n      const {\n        authentication\n      } = await refreshToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        refreshToken: currentAuthentication.refreshToken,\n        request: state.request\n      });\n      state.authentication = {\n        tokenType: \"oauth\",\n        type: \"token\",\n        ...authentication\n      };\n    }\n  }\n  if (options.type === \"refresh\") {\n    if (state.clientType === \"oauth-app\") {\n      throw new Error(\"[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens\");\n    }\n    if (!currentAuthentication.hasOwnProperty(\"expiresAt\")) {\n      throw new Error(\"[@octokit/auth-oauth-user] Refresh token missing\");\n    }\n    await state.onTokenCreated?.(state.authentication, {\n      type: options.type\n    });\n  }\n  if (options.type === \"check\" || options.type === \"reset\") {\n    const method = options.type === \"check\" ? checkToken : resetToken;\n    try {\n      const {\n        authentication\n      } = await method({\n        // @ts-expect-error making TS happy would require unnecessary code so no\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: state.authentication.token,\n        request: state.request\n      });\n      state.authentication = {\n        tokenType: \"oauth\",\n        type: \"token\",\n        // @ts-expect-error TBD\n        ...authentication\n      };\n      if (options.type === \"reset\") {\n        await state.onTokenCreated?.(state.authentication, {\n          type: options.type\n        });\n      }\n      return state.authentication;\n    } catch (error) {\n      if (error.status === 404) {\n        error.message = \"[@octokit/auth-oauth-user] Token is invalid\";\n        state.authentication.invalid = true;\n      }\n      throw error;\n    }\n  }\n  if (options.type === \"delete\" || options.type === \"deleteAuthorization\") {\n    const method = options.type === \"delete\" ? deleteToken : deleteAuthorization;\n    try {\n      await method({\n        // @ts-expect-error making TS happy would require unnecessary code so no\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: state.authentication.token,\n        request: state.request\n      });\n    } catch (error) {\n      if (error.status !== 404) throw error;\n    }\n    state.authentication.invalid = true;\n    return state.authentication;\n  }\n  return state.authentication;\n}\n\n// pkg/dist-src/hook.js\nimport btoa from \"btoa-lite\";\n\n// pkg/dist-src/requires-basic-auth.js\nvar ROUTES_REQUIRING_BASIC_AUTH = /\\/applications\\/[^/]+\\/(token|grant)s?/;\nfunction requiresBasicAuth(url) {\n  return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);\n}\n\n// pkg/dist-src/hook.js\nasync function hook(state, request, route, parameters = {}) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n    return request(endpoint);\n  }\n  if (requiresBasicAuth(endpoint.url)) {\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    return request(endpoint);\n  }\n  const {\n    token\n  } = state.clientType === \"oauth-app\" ? await auth({\n    ...state,\n    request\n  }) : await auth({\n    ...state,\n    request\n  });\n  endpoint.headers.authorization = \"token \" + token;\n  return request(endpoint);\n}\n\n// pkg/dist-src/index.js\nfunction createOAuthUserAuth({\n  clientId,\n  clientSecret,\n  clientType = \"oauth-app\",\n  request = octokitRequest.defaults({\n    headers: {\n      \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`\n    }\n  }),\n  onTokenCreated,\n  ...strategyOptions\n}) {\n  const state = Object.assign({\n    clientType,\n    clientId,\n    clientSecret,\n    onTokenCreated,\n    strategyOptions,\n    request\n  });\n  return Object.assign(auth.bind(null, state), {\n    // @ts-expect-error not worth the extra code needed to appease TS\n    hook: hook.bind(null, state)\n  });\n}\ncreateOAuthUserAuth.VERSION = VERSION;\nexport { createOAuthUserAuth, requiresBasicAuth };","map":{"version":3,"names":["getUserAgent","request","octokitRequest","VERSION","createOAuthDeviceAuth","exchangeWebFlowCode","getAuthentication","state","strategyOptions","authentication","clientId","clientSecret","clientType","onTokenCreated","type","tokenType","deviceAuth","Error","checkToken","deleteAuthorization","deleteToken","refreshToken","resetToken","auth","options","invalid","currentAuthentication","Date","expiresAt","hasOwnProperty","method","token","error","status","message","btoa","ROUTES_REQUIRING_BASIC_AUTH","requiresBasicAuth","url","test","hook","route","parameters","endpoint","merge","credentials","headers","authorization","createOAuthUserAuth","defaults","Object","assign","bind"],"sources":["C:/Users/Prateek/Desktop/College_Stuff/Fall_2023_Co-op_Semester/MakeUC/Find_your_repository/node_modules/@octokit/auth-oauth-user/dist-web/index.js"],"sourcesContent":["// pkg/dist-src/index.js\nimport { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"4.0.1\";\n\n// pkg/dist-src/get-authentication.js\nimport { createOAuthDeviceAuth } from \"@octokit/auth-oauth-device\";\nimport { exchangeWebFlowCode } from \"@octokit/oauth-methods\";\nasync function getAuthentication(state) {\n  if (\"code\" in state.strategyOptions) {\n    const { authentication } = await exchangeWebFlowCode({\n      clientId: state.clientId,\n      clientSecret: state.clientSecret,\n      clientType: state.clientType,\n      onTokenCreated: state.onTokenCreated,\n      ...state.strategyOptions,\n      request: state.request\n    });\n    return {\n      type: \"token\",\n      tokenType: \"oauth\",\n      ...authentication\n    };\n  }\n  if (\"onVerification\" in state.strategyOptions) {\n    const deviceAuth = createOAuthDeviceAuth({\n      clientType: state.clientType,\n      clientId: state.clientId,\n      onTokenCreated: state.onTokenCreated,\n      ...state.strategyOptions,\n      request: state.request\n    });\n    const authentication = await deviceAuth({\n      type: \"oauth\"\n    });\n    return {\n      clientSecret: state.clientSecret,\n      ...authentication\n    };\n  }\n  if (\"token\" in state.strategyOptions) {\n    return {\n      type: \"token\",\n      tokenType: \"oauth\",\n      clientId: state.clientId,\n      clientSecret: state.clientSecret,\n      clientType: state.clientType,\n      onTokenCreated: state.onTokenCreated,\n      ...state.strategyOptions\n    };\n  }\n  throw new Error(\"[@octokit/auth-oauth-user] Invalid strategy options\");\n}\n\n// pkg/dist-src/auth.js\nimport {\n  checkToken,\n  deleteAuthorization,\n  deleteToken,\n  refreshToken,\n  resetToken\n} from \"@octokit/oauth-methods\";\nasync function auth(state, options = {}) {\n  if (!state.authentication) {\n    state.authentication = state.clientType === \"oauth-app\" ? await getAuthentication(state) : await getAuthentication(state);\n  }\n  if (state.authentication.invalid) {\n    throw new Error(\"[@octokit/auth-oauth-user] Token is invalid\");\n  }\n  const currentAuthentication = state.authentication;\n  if (\"expiresAt\" in currentAuthentication) {\n    if (options.type === \"refresh\" || new Date(currentAuthentication.expiresAt) < /* @__PURE__ */ new Date()) {\n      const { authentication } = await refreshToken({\n        clientType: \"github-app\",\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        refreshToken: currentAuthentication.refreshToken,\n        request: state.request\n      });\n      state.authentication = {\n        tokenType: \"oauth\",\n        type: \"token\",\n        ...authentication\n      };\n    }\n  }\n  if (options.type === \"refresh\") {\n    if (state.clientType === \"oauth-app\") {\n      throw new Error(\n        \"[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens\"\n      );\n    }\n    if (!currentAuthentication.hasOwnProperty(\"expiresAt\")) {\n      throw new Error(\"[@octokit/auth-oauth-user] Refresh token missing\");\n    }\n    await state.onTokenCreated?.(state.authentication, {\n      type: options.type\n    });\n  }\n  if (options.type === \"check\" || options.type === \"reset\") {\n    const method = options.type === \"check\" ? checkToken : resetToken;\n    try {\n      const { authentication } = await method({\n        // @ts-expect-error making TS happy would require unnecessary code so no\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: state.authentication.token,\n        request: state.request\n      });\n      state.authentication = {\n        tokenType: \"oauth\",\n        type: \"token\",\n        // @ts-expect-error TBD\n        ...authentication\n      };\n      if (options.type === \"reset\") {\n        await state.onTokenCreated?.(state.authentication, {\n          type: options.type\n        });\n      }\n      return state.authentication;\n    } catch (error) {\n      if (error.status === 404) {\n        error.message = \"[@octokit/auth-oauth-user] Token is invalid\";\n        state.authentication.invalid = true;\n      }\n      throw error;\n    }\n  }\n  if (options.type === \"delete\" || options.type === \"deleteAuthorization\") {\n    const method = options.type === \"delete\" ? deleteToken : deleteAuthorization;\n    try {\n      await method({\n        // @ts-expect-error making TS happy would require unnecessary code so no\n        clientType: state.clientType,\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        token: state.authentication.token,\n        request: state.request\n      });\n    } catch (error) {\n      if (error.status !== 404)\n        throw error;\n    }\n    state.authentication.invalid = true;\n    return state.authentication;\n  }\n  return state.authentication;\n}\n\n// pkg/dist-src/hook.js\nimport btoa from \"btoa-lite\";\n\n// pkg/dist-src/requires-basic-auth.js\nvar ROUTES_REQUIRING_BASIC_AUTH = /\\/applications\\/[^/]+\\/(token|grant)s?/;\nfunction requiresBasicAuth(url) {\n  return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);\n}\n\n// pkg/dist-src/hook.js\nasync function hook(state, request, route, parameters = {}) {\n  const endpoint = request.endpoint.merge(\n    route,\n    parameters\n  );\n  if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n    return request(endpoint);\n  }\n  if (requiresBasicAuth(endpoint.url)) {\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    return request(endpoint);\n  }\n  const { token } = state.clientType === \"oauth-app\" ? await auth({ ...state, request }) : await auth({ ...state, request });\n  endpoint.headers.authorization = \"token \" + token;\n  return request(endpoint);\n}\n\n// pkg/dist-src/index.js\nfunction createOAuthUserAuth({\n  clientId,\n  clientSecret,\n  clientType = \"oauth-app\",\n  request = octokitRequest.defaults({\n    headers: {\n      \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`\n    }\n  }),\n  onTokenCreated,\n  ...strategyOptions\n}) {\n  const state = Object.assign({\n    clientType,\n    clientId,\n    clientSecret,\n    onTokenCreated,\n    strategyOptions,\n    request\n  });\n  return Object.assign(auth.bind(null, state), {\n    // @ts-expect-error not worth the extra code needed to appease TS\n    hook: hook.bind(null, state)\n  });\n}\ncreateOAuthUserAuth.VERSION = VERSION;\nexport {\n  createOAuthUserAuth,\n  requiresBasicAuth\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}