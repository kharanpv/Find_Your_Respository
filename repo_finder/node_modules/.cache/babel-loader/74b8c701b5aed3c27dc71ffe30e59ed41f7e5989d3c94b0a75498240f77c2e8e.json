{"ast":null,"code":"\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// pkg/dist-src/index.js\nvar dist_src_exports = {};\n__export(dist_src_exports, {\n  createAppAuth: () => createAppAuth,\n  createOAuthUserAuth: () => import_auth_oauth_user2.createOAuthUserAuth\n});\nmodule.exports = __toCommonJS(dist_src_exports);\nvar import_universal_user_agent = require(\"universal-user-agent\");\nvar import_request = require(\"@octokit/request\");\nvar import_auth_oauth_app = require(\"@octokit/auth-oauth-app\");\n\n// pkg/dist-src/auth.js\nvar import_deprecation = require(\"deprecation\");\nvar OAuthAppAuth = __toESM(require(\"@octokit/auth-oauth-app\"));\n\n// pkg/dist-src/get-app-authentication.js\nvar import_universal_github_app_jwt = require(\"universal-github-app-jwt\");\nasync function getAppAuthentication({\n  appId,\n  privateKey,\n  timeDifference\n}) {\n  try {\n    const appAuthentication = await (0, import_universal_github_app_jwt.githubAppJwt)({\n      id: +appId,\n      privateKey,\n      now: timeDifference && Math.floor(Date.now() / 1e3) + timeDifference\n    });\n    return {\n      type: \"app\",\n      token: appAuthentication.token,\n      appId: appAuthentication.appId,\n      expiresAt: new Date(appAuthentication.expiration * 1e3).toISOString()\n    };\n  } catch (error) {\n    if (privateKey === \"-----BEGIN RSA PRIVATE KEY-----\") {\n      throw new Error(\"The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\\n'\");\n    } else {\n      throw error;\n    }\n  }\n}\n\n// pkg/dist-src/cache.js\nvar import_lru_cache = require(\"lru-cache\");\nfunction getCache() {\n  return new import_lru_cache.LRUCache({\n    // cache max. 15000 tokens, that will use less than 10mb memory\n    max: 15e3,\n    // Cache for 1 minute less than GitHub expiry\n    ttl: 1e3 * 60 * 59\n  });\n}\nasync function get(cache, options) {\n  const cacheKey = optionsToCacheKey(options);\n  const result = await cache.get(cacheKey);\n  if (!result) {\n    return;\n  }\n  const [token, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName] = result.split(\"|\");\n  const permissions = options.permissions || permissionsString.split(/,/).reduce((permissions2, string) => {\n    if (/!$/.test(string)) {\n      permissions2[string.slice(0, -1)] = \"write\";\n    } else {\n      permissions2[string] = \"read\";\n    }\n    return permissions2;\n  }, {});\n  return {\n    token,\n    createdAt,\n    expiresAt,\n    permissions,\n    repositoryIds: options.repositoryIds,\n    repositoryNames: options.repositoryNames,\n    singleFileName,\n    repositorySelection\n  };\n}\nasync function set(cache, options, data) {\n  const key = optionsToCacheKey(options);\n  const permissionsString = options.permissions ? \"\" : Object.keys(data.permissions).map(name => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`).join(\",\");\n  const value = [data.token, data.createdAt, data.expiresAt, data.repositorySelection, permissionsString, data.singleFileName].join(\"|\");\n  await cache.set(key, value);\n}\nfunction optionsToCacheKey({\n  installationId,\n  permissions = {},\n  repositoryIds = [],\n  repositoryNames = []\n}) {\n  const permissionsString = Object.keys(permissions).sort().map(name => permissions[name] === \"read\" ? name : `${name}!`).join(\",\");\n  const repositoryIdsString = repositoryIds.sort().join(\",\");\n  const repositoryNamesString = repositoryNames.join(\",\");\n  return [installationId, repositoryIdsString, repositoryNamesString, permissionsString].filter(Boolean).join(\"|\");\n}\n\n// pkg/dist-src/to-token-authentication.js\nfunction toTokenAuthentication({\n  installationId,\n  token,\n  createdAt,\n  expiresAt,\n  repositorySelection,\n  permissions,\n  repositoryIds,\n  repositoryNames,\n  singleFileName\n}) {\n  return Object.assign({\n    type: \"token\",\n    tokenType: \"installation\",\n    token,\n    installationId,\n    permissions,\n    createdAt,\n    expiresAt,\n    repositorySelection\n  }, repositoryIds ? {\n    repositoryIds\n  } : null, repositoryNames ? {\n    repositoryNames\n  } : null, singleFileName ? {\n    singleFileName\n  } : null);\n}\n\n// pkg/dist-src/get-installation-authentication.js\nasync function getInstallationAuthentication(state, options, customRequest) {\n  const installationId = Number(options.installationId || state.installationId);\n  if (!installationId) {\n    throw new Error(\"[@octokit/auth-app] installationId option is required for installation authentication.\");\n  }\n  if (options.factory) {\n    const {\n      type,\n      factory,\n      oauthApp,\n      ...factoryAuthOptions\n    } = {\n      ...state,\n      ...options\n    };\n    return factory(factoryAuthOptions);\n  }\n  const optionsWithInstallationTokenFromState = Object.assign({\n    installationId\n  }, options);\n  if (!options.refresh) {\n    const result = await get(state.cache, optionsWithInstallationTokenFromState);\n    if (result) {\n      const {\n        token: token2,\n        createdAt: createdAt2,\n        expiresAt: expiresAt2,\n        permissions: permissions2,\n        repositoryIds: repositoryIds2,\n        repositoryNames: repositoryNames2,\n        singleFileName: singleFileName2,\n        repositorySelection: repositorySelection2\n      } = result;\n      return toTokenAuthentication({\n        installationId,\n        token: token2,\n        createdAt: createdAt2,\n        expiresAt: expiresAt2,\n        permissions: permissions2,\n        repositorySelection: repositorySelection2,\n        repositoryIds: repositoryIds2,\n        repositoryNames: repositoryNames2,\n        singleFileName: singleFileName2\n      });\n    }\n  }\n  const appAuthentication = await getAppAuthentication(state);\n  const request = customRequest || state.request;\n  const {\n    data: {\n      token,\n      expires_at: expiresAt,\n      repositories,\n      permissions: permissionsOptional,\n      repository_selection: repositorySelectionOptional,\n      single_file: singleFileName\n    }\n  } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n    installation_id: installationId,\n    repository_ids: options.repositoryIds,\n    repositories: options.repositoryNames,\n    permissions: options.permissions,\n    mediaType: {\n      previews: [\"machine-man\"]\n    },\n    headers: {\n      authorization: `bearer ${appAuthentication.token}`\n    }\n  });\n  const permissions = permissionsOptional || {};\n  const repositorySelection = repositorySelectionOptional || \"all\";\n  const repositoryIds = repositories ? repositories.map(r => r.id) : void 0;\n  const repositoryNames = repositories ? repositories.map(repo => repo.name) : void 0;\n  const createdAt = /* @__PURE__ */new Date().toISOString();\n  await set(state.cache, optionsWithInstallationTokenFromState, {\n    token,\n    createdAt,\n    expiresAt,\n    repositorySelection,\n    permissions,\n    repositoryIds,\n    repositoryNames,\n    singleFileName\n  });\n  return toTokenAuthentication({\n    installationId,\n    token,\n    createdAt,\n    expiresAt,\n    repositorySelection,\n    permissions,\n    repositoryIds,\n    repositoryNames,\n    singleFileName\n  });\n}\n\n// pkg/dist-src/auth.js\nasync function auth(state, authOptions) {\n  switch (authOptions.type) {\n    case \"app\":\n      return getAppAuthentication(state);\n    case \"oauth\":\n      state.log.warn(\n      // @ts-expect-error `log.warn()` expects string\n      new import_deprecation.Deprecation(`[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`));\n    case \"oauth-app\":\n      return state.oauthApp({\n        type: \"oauth-app\"\n      });\n    case \"installation\":\n      authOptions;\n      return getInstallationAuthentication(state, {\n        ...authOptions,\n        type: \"installation\"\n      });\n    case \"oauth-user\":\n      return state.oauthApp(authOptions);\n    default:\n      throw new Error(`Invalid auth type: ${authOptions.type}`);\n  }\n}\n\n// pkg/dist-src/hook.js\nvar import_auth_oauth_user = require(\"@octokit/auth-oauth-user\");\nvar import_request_error = require(\"@octokit/request-error\");\n\n// pkg/dist-src/requires-app-auth.js\nvar PATHS = [\"/app\", \"/app/hook/config\", \"/app/hook/deliveries\", \"/app/hook/deliveries/{delivery_id}\", \"/app/hook/deliveries/{delivery_id}/attempts\", \"/app/installations\", \"/app/installations/{installation_id}\", \"/app/installations/{installation_id}/access_tokens\", \"/app/installations/{installation_id}/suspended\", \"/marketplace_listing/accounts/{account_id}\", \"/marketplace_listing/plan\", \"/marketplace_listing/plans\", \"/marketplace_listing/plans/{plan_id}/accounts\", \"/marketplace_listing/stubbed/accounts/{account_id}\", \"/marketplace_listing/stubbed/plan\", \"/marketplace_listing/stubbed/plans\", \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\", \"/orgs/{org}/installation\", \"/repos/{owner}/{repo}/installation\", \"/users/{username}/installation\"];\nfunction routeMatcher(paths) {\n  const regexes = paths.map(p => p.split(\"/\").map(c => c.startsWith(\"{\") ? \"(?:.+?)\" : c).join(\"/\"));\n  const regex = `^(?:${regexes.map(r => `(?:${r})`).join(\"|\")})$`;\n  return new RegExp(regex, \"i\");\n}\nvar REGEX = routeMatcher(PATHS);\nfunction requiresAppAuth(url) {\n  return !!url && REGEX.test(url.split(\"?\")[0]);\n}\n\n// pkg/dist-src/hook.js\nvar FIVE_SECONDS_IN_MS = 5 * 1e3;\nfunction isNotTimeSkewError(error) {\n  return !(error.message.match(/'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/) || error.message.match(/'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/));\n}\nasync function hook(state, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  const url = endpoint.url;\n  if (/\\/login\\/oauth\\/access_token$/.test(url)) {\n    return request(endpoint);\n  }\n  if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n    const {\n      token: token2\n    } = await getAppAuthentication(state);\n    endpoint.headers.authorization = `bearer ${token2}`;\n    let response;\n    try {\n      response = await request(endpoint);\n    } catch (error) {\n      if (isNotTimeSkewError(error)) {\n        throw error;\n      }\n      if (typeof error.response.headers.date === \"undefined\") {\n        throw error;\n      }\n      const diff = Math.floor((Date.parse(error.response.headers.date) - Date.parse( /* @__PURE__ */new Date().toString())) / 1e3);\n      state.log.warn(error.message);\n      state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);\n      const {\n        token: token3\n      } = await getAppAuthentication({\n        ...state,\n        timeDifference: diff\n      });\n      endpoint.headers.authorization = `bearer ${token3}`;\n      return request(endpoint);\n    }\n    return response;\n  }\n  if ((0, import_auth_oauth_user.requiresBasicAuth)(url)) {\n    const authentication = await state.oauthApp({\n      type: \"oauth-app\"\n    });\n    endpoint.headers.authorization = authentication.headers.authorization;\n    return request(endpoint);\n  }\n  const {\n    token,\n    createdAt\n  } = await getInstallationAuthentication(state,\n  // @ts-expect-error TBD\n  {}, request);\n  endpoint.headers.authorization = `token ${token}`;\n  return sendRequestWithRetries(state, request, endpoint, createdAt);\n}\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n  const timeSinceTokenCreationInMs = + /* @__PURE__ */new Date() - +new Date(createdAt);\n  try {\n    return await request(options);\n  } catch (error) {\n    if (error.status !== 401) {\n      throw error;\n    }\n    if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n      if (retries > 0) {\n        error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n      }\n      throw error;\n    }\n    ++retries;\n    const awaitTime = retries * 1e3;\n    state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1e3}s)`);\n    await new Promise(resolve => setTimeout(resolve, awaitTime));\n    return sendRequestWithRetries(state, request, options, createdAt, retries);\n  }\n}\n\n// pkg/dist-src/version.js\nvar VERSION = \"6.0.1\";\n\n// pkg/dist-src/index.js\nvar import_auth_oauth_user2 = require(\"@octokit/auth-oauth-user\");\nfunction createAppAuth(options) {\n  if (!options.appId) {\n    throw new Error(\"[@octokit/auth-app] appId option is required\");\n  }\n  if (!Number.isFinite(+options.appId)) {\n    throw new Error(\"[@octokit/auth-app] appId option must be a number or numeric string\");\n  }\n  if (!options.privateKey) {\n    throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n  }\n  if (\"installationId\" in options && !options.installationId) {\n    throw new Error(\"[@octokit/auth-app] installationId is set to a falsy value\");\n  }\n  const log = Object.assign({\n    warn: console.warn.bind(console)\n  }, options.log);\n  const request = options.request || import_request.request.defaults({\n    headers: {\n      \"user-agent\": `octokit-auth-app.js/${VERSION} ${(0, import_universal_user_agent.getUserAgent)()}`\n    }\n  });\n  const state = Object.assign({\n    request,\n    cache: getCache()\n  }, options, options.installationId ? {\n    installationId: Number(options.installationId)\n  } : {}, {\n    log,\n    oauthApp: (0, import_auth_oauth_app.createOAuthAppAuth)({\n      clientType: \"github-app\",\n      clientId: options.clientId || \"\",\n      clientSecret: options.clientSecret || \"\",\n      request\n    })\n  });\n  return Object.assign(auth.bind(null, state), {\n    hook: hook.bind(null, state)\n  });\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  createAppAuth,\n  createOAuthUserAuth\n});","map":{"version":3,"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","dist_src_exports","createAppAuth","createOAuthUserAuth","import_auth_oauth_user2","module","exports","import_universal_user_agent","require","import_request","import_auth_oauth_app","import_deprecation","OAuthAppAuth","import_universal_github_app_jwt","getAppAuthentication","appId","privateKey","timeDifference","appAuthentication","githubAppJwt","id","now","Math","floor","Date","type","token","expiresAt","expiration","toISOString","error","Error","import_lru_cache","getCache","LRUCache","max","ttl","cache","options","cacheKey","optionsToCacheKey","result","createdAt","repositorySelection","permissionsString","singleFileName","split","permissions","reduce","permissions2","string","test","slice","repositoryIds","repositoryNames","set","data","keys","map","join","installationId","sort","repositoryIdsString","repositoryNamesString","filter","Boolean","toTokenAuthentication","assign","tokenType","getInstallationAuthentication","state","customRequest","Number","factory","oauthApp","factoryAuthOptions","optionsWithInstallationTokenFromState","refresh","token2","createdAt2","expiresAt2","repositoryIds2","repositoryNames2","singleFileName2","repositorySelection2","request","expires_at","repositories","permissionsOptional","repository_selection","repositorySelectionOptional","single_file","installation_id","repository_ids","mediaType","previews","headers","authorization","r","repo","auth","authOptions","log","warn","Deprecation","import_auth_oauth_user","import_request_error","PATHS","routeMatcher","paths","regexes","p","c","startsWith","regex","RegExp","REGEX","requiresAppAuth","url","FIVE_SECONDS_IN_MS","isNotTimeSkewError","message","match","hook","route","parameters","endpoint","merge","replace","DEFAULTS","baseUrl","response","date","diff","parse","toString","token3","requiresBasicAuth","authentication","sendRequestWithRetries","retries","timeSinceTokenCreationInMs","status","awaitTime","Promise","resolve","setTimeout","VERSION","isFinite","console","bind","defaults","getUserAgent","createOAuthAppAuth","clientType","clientId","clientSecret"],"sources":["C:/Users/Prateek/Desktop/College_Stuff/Fall_2023_Co-op_Semester/MakeUC/Find_your_repository/node_modules/@octokit/auth-app/dist-node/index.js"],"sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// pkg/dist-src/index.js\nvar dist_src_exports = {};\n__export(dist_src_exports, {\n  createAppAuth: () => createAppAuth,\n  createOAuthUserAuth: () => import_auth_oauth_user2.createOAuthUserAuth\n});\nmodule.exports = __toCommonJS(dist_src_exports);\nvar import_universal_user_agent = require(\"universal-user-agent\");\nvar import_request = require(\"@octokit/request\");\nvar import_auth_oauth_app = require(\"@octokit/auth-oauth-app\");\n\n// pkg/dist-src/auth.js\nvar import_deprecation = require(\"deprecation\");\nvar OAuthAppAuth = __toESM(require(\"@octokit/auth-oauth-app\"));\n\n// pkg/dist-src/get-app-authentication.js\nvar import_universal_github_app_jwt = require(\"universal-github-app-jwt\");\nasync function getAppAuthentication({\n  appId,\n  privateKey,\n  timeDifference\n}) {\n  try {\n    const appAuthentication = await (0, import_universal_github_app_jwt.githubAppJwt)({\n      id: +appId,\n      privateKey,\n      now: timeDifference && Math.floor(Date.now() / 1e3) + timeDifference\n    });\n    return {\n      type: \"app\",\n      token: appAuthentication.token,\n      appId: appAuthentication.appId,\n      expiresAt: new Date(appAuthentication.expiration * 1e3).toISOString()\n    };\n  } catch (error) {\n    if (privateKey === \"-----BEGIN RSA PRIVATE KEY-----\") {\n      throw new Error(\n        \"The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\\n'\"\n      );\n    } else {\n      throw error;\n    }\n  }\n}\n\n// pkg/dist-src/cache.js\nvar import_lru_cache = require(\"lru-cache\");\nfunction getCache() {\n  return new import_lru_cache.LRUCache({\n    // cache max. 15000 tokens, that will use less than 10mb memory\n    max: 15e3,\n    // Cache for 1 minute less than GitHub expiry\n    ttl: 1e3 * 60 * 59\n  });\n}\nasync function get(cache, options) {\n  const cacheKey = optionsToCacheKey(options);\n  const result = await cache.get(cacheKey);\n  if (!result) {\n    return;\n  }\n  const [\n    token,\n    createdAt,\n    expiresAt,\n    repositorySelection,\n    permissionsString,\n    singleFileName\n  ] = result.split(\"|\");\n  const permissions = options.permissions || permissionsString.split(/,/).reduce((permissions2, string) => {\n    if (/!$/.test(string)) {\n      permissions2[string.slice(0, -1)] = \"write\";\n    } else {\n      permissions2[string] = \"read\";\n    }\n    return permissions2;\n  }, {});\n  return {\n    token,\n    createdAt,\n    expiresAt,\n    permissions,\n    repositoryIds: options.repositoryIds,\n    repositoryNames: options.repositoryNames,\n    singleFileName,\n    repositorySelection\n  };\n}\nasync function set(cache, options, data) {\n  const key = optionsToCacheKey(options);\n  const permissionsString = options.permissions ? \"\" : Object.keys(data.permissions).map(\n    (name) => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`\n  ).join(\",\");\n  const value = [\n    data.token,\n    data.createdAt,\n    data.expiresAt,\n    data.repositorySelection,\n    permissionsString,\n    data.singleFileName\n  ].join(\"|\");\n  await cache.set(key, value);\n}\nfunction optionsToCacheKey({\n  installationId,\n  permissions = {},\n  repositoryIds = [],\n  repositoryNames = []\n}) {\n  const permissionsString = Object.keys(permissions).sort().map((name) => permissions[name] === \"read\" ? name : `${name}!`).join(\",\");\n  const repositoryIdsString = repositoryIds.sort().join(\",\");\n  const repositoryNamesString = repositoryNames.join(\",\");\n  return [\n    installationId,\n    repositoryIdsString,\n    repositoryNamesString,\n    permissionsString\n  ].filter(Boolean).join(\"|\");\n}\n\n// pkg/dist-src/to-token-authentication.js\nfunction toTokenAuthentication({\n  installationId,\n  token,\n  createdAt,\n  expiresAt,\n  repositorySelection,\n  permissions,\n  repositoryIds,\n  repositoryNames,\n  singleFileName\n}) {\n  return Object.assign(\n    {\n      type: \"token\",\n      tokenType: \"installation\",\n      token,\n      installationId,\n      permissions,\n      createdAt,\n      expiresAt,\n      repositorySelection\n    },\n    repositoryIds ? { repositoryIds } : null,\n    repositoryNames ? { repositoryNames } : null,\n    singleFileName ? { singleFileName } : null\n  );\n}\n\n// pkg/dist-src/get-installation-authentication.js\nasync function getInstallationAuthentication(state, options, customRequest) {\n  const installationId = Number(options.installationId || state.installationId);\n  if (!installationId) {\n    throw new Error(\n      \"[@octokit/auth-app] installationId option is required for installation authentication.\"\n    );\n  }\n  if (options.factory) {\n    const { type, factory, oauthApp, ...factoryAuthOptions } = {\n      ...state,\n      ...options\n    };\n    return factory(factoryAuthOptions);\n  }\n  const optionsWithInstallationTokenFromState = Object.assign(\n    { installationId },\n    options\n  );\n  if (!options.refresh) {\n    const result = await get(\n      state.cache,\n      optionsWithInstallationTokenFromState\n    );\n    if (result) {\n      const {\n        token: token2,\n        createdAt: createdAt2,\n        expiresAt: expiresAt2,\n        permissions: permissions2,\n        repositoryIds: repositoryIds2,\n        repositoryNames: repositoryNames2,\n        singleFileName: singleFileName2,\n        repositorySelection: repositorySelection2\n      } = result;\n      return toTokenAuthentication({\n        installationId,\n        token: token2,\n        createdAt: createdAt2,\n        expiresAt: expiresAt2,\n        permissions: permissions2,\n        repositorySelection: repositorySelection2,\n        repositoryIds: repositoryIds2,\n        repositoryNames: repositoryNames2,\n        singleFileName: singleFileName2\n      });\n    }\n  }\n  const appAuthentication = await getAppAuthentication(state);\n  const request = customRequest || state.request;\n  const {\n    data: {\n      token,\n      expires_at: expiresAt,\n      repositories,\n      permissions: permissionsOptional,\n      repository_selection: repositorySelectionOptional,\n      single_file: singleFileName\n    }\n  } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n    installation_id: installationId,\n    repository_ids: options.repositoryIds,\n    repositories: options.repositoryNames,\n    permissions: options.permissions,\n    mediaType: {\n      previews: [\"machine-man\"]\n    },\n    headers: {\n      authorization: `bearer ${appAuthentication.token}`\n    }\n  });\n  const permissions = permissionsOptional || {};\n  const repositorySelection = repositorySelectionOptional || \"all\";\n  const repositoryIds = repositories ? repositories.map((r) => r.id) : void 0;\n  const repositoryNames = repositories ? repositories.map((repo) => repo.name) : void 0;\n  const createdAt = (/* @__PURE__ */ new Date()).toISOString();\n  await set(state.cache, optionsWithInstallationTokenFromState, {\n    token,\n    createdAt,\n    expiresAt,\n    repositorySelection,\n    permissions,\n    repositoryIds,\n    repositoryNames,\n    singleFileName\n  });\n  return toTokenAuthentication({\n    installationId,\n    token,\n    createdAt,\n    expiresAt,\n    repositorySelection,\n    permissions,\n    repositoryIds,\n    repositoryNames,\n    singleFileName\n  });\n}\n\n// pkg/dist-src/auth.js\nasync function auth(state, authOptions) {\n  switch (authOptions.type) {\n    case \"app\":\n      return getAppAuthentication(state);\n    case \"oauth\":\n      state.log.warn(\n        // @ts-expect-error `log.warn()` expects string\n        new import_deprecation.Deprecation(\n          `[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`\n        )\n      );\n    case \"oauth-app\":\n      return state.oauthApp({ type: \"oauth-app\" });\n    case \"installation\":\n      authOptions;\n      return getInstallationAuthentication(state, {\n        ...authOptions,\n        type: \"installation\"\n      });\n    case \"oauth-user\":\n      return state.oauthApp(authOptions);\n    default:\n      throw new Error(`Invalid auth type: ${authOptions.type}`);\n  }\n}\n\n// pkg/dist-src/hook.js\nvar import_auth_oauth_user = require(\"@octokit/auth-oauth-user\");\nvar import_request_error = require(\"@octokit/request-error\");\n\n// pkg/dist-src/requires-app-auth.js\nvar PATHS = [\n  \"/app\",\n  \"/app/hook/config\",\n  \"/app/hook/deliveries\",\n  \"/app/hook/deliveries/{delivery_id}\",\n  \"/app/hook/deliveries/{delivery_id}/attempts\",\n  \"/app/installations\",\n  \"/app/installations/{installation_id}\",\n  \"/app/installations/{installation_id}/access_tokens\",\n  \"/app/installations/{installation_id}/suspended\",\n  \"/marketplace_listing/accounts/{account_id}\",\n  \"/marketplace_listing/plan\",\n  \"/marketplace_listing/plans\",\n  \"/marketplace_listing/plans/{plan_id}/accounts\",\n  \"/marketplace_listing/stubbed/accounts/{account_id}\",\n  \"/marketplace_listing/stubbed/plan\",\n  \"/marketplace_listing/stubbed/plans\",\n  \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n  \"/orgs/{org}/installation\",\n  \"/repos/{owner}/{repo}/installation\",\n  \"/users/{username}/installation\"\n];\nfunction routeMatcher(paths) {\n  const regexes = paths.map(\n    (p) => p.split(\"/\").map((c) => c.startsWith(\"{\") ? \"(?:.+?)\" : c).join(\"/\")\n  );\n  const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})$`;\n  return new RegExp(regex, \"i\");\n}\nvar REGEX = routeMatcher(PATHS);\nfunction requiresAppAuth(url) {\n  return !!url && REGEX.test(url.split(\"?\")[0]);\n}\n\n// pkg/dist-src/hook.js\nvar FIVE_SECONDS_IN_MS = 5 * 1e3;\nfunction isNotTimeSkewError(error) {\n  return !(error.message.match(\n    /'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/\n  ) || error.message.match(\n    /'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/\n  ));\n}\nasync function hook(state, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  const url = endpoint.url;\n  if (/\\/login\\/oauth\\/access_token$/.test(url)) {\n    return request(endpoint);\n  }\n  if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n    const { token: token2 } = await getAppAuthentication(state);\n    endpoint.headers.authorization = `bearer ${token2}`;\n    let response;\n    try {\n      response = await request(endpoint);\n    } catch (error) {\n      if (isNotTimeSkewError(error)) {\n        throw error;\n      }\n      if (typeof error.response.headers.date === \"undefined\") {\n        throw error;\n      }\n      const diff = Math.floor(\n        (Date.parse(error.response.headers.date) - Date.parse((/* @__PURE__ */ new Date()).toString())) / 1e3\n      );\n      state.log.warn(error.message);\n      state.log.warn(\n        `[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`\n      );\n      const { token: token3 } = await getAppAuthentication({\n        ...state,\n        timeDifference: diff\n      });\n      endpoint.headers.authorization = `bearer ${token3}`;\n      return request(endpoint);\n    }\n    return response;\n  }\n  if ((0, import_auth_oauth_user.requiresBasicAuth)(url)) {\n    const authentication = await state.oauthApp({ type: \"oauth-app\" });\n    endpoint.headers.authorization = authentication.headers.authorization;\n    return request(endpoint);\n  }\n  const { token, createdAt } = await getInstallationAuthentication(\n    state,\n    // @ts-expect-error TBD\n    {},\n    request\n  );\n  endpoint.headers.authorization = `token ${token}`;\n  return sendRequestWithRetries(\n    state,\n    request,\n    endpoint,\n    createdAt\n  );\n}\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n  const timeSinceTokenCreationInMs = +/* @__PURE__ */ new Date() - +new Date(createdAt);\n  try {\n    return await request(options);\n  } catch (error) {\n    if (error.status !== 401) {\n      throw error;\n    }\n    if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n      if (retries > 0) {\n        error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n      }\n      throw error;\n    }\n    ++retries;\n    const awaitTime = retries * 1e3;\n    state.log.warn(\n      `[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1e3}s)`\n    );\n    await new Promise((resolve) => setTimeout(resolve, awaitTime));\n    return sendRequestWithRetries(state, request, options, createdAt, retries);\n  }\n}\n\n// pkg/dist-src/version.js\nvar VERSION = \"6.0.1\";\n\n// pkg/dist-src/index.js\nvar import_auth_oauth_user2 = require(\"@octokit/auth-oauth-user\");\nfunction createAppAuth(options) {\n  if (!options.appId) {\n    throw new Error(\"[@octokit/auth-app] appId option is required\");\n  }\n  if (!Number.isFinite(+options.appId)) {\n    throw new Error(\n      \"[@octokit/auth-app] appId option must be a number or numeric string\"\n    );\n  }\n  if (!options.privateKey) {\n    throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n  }\n  if (\"installationId\" in options && !options.installationId) {\n    throw new Error(\n      \"[@octokit/auth-app] installationId is set to a falsy value\"\n    );\n  }\n  const log = Object.assign(\n    {\n      warn: console.warn.bind(console)\n    },\n    options.log\n  );\n  const request = options.request || import_request.request.defaults({\n    headers: {\n      \"user-agent\": `octokit-auth-app.js/${VERSION} ${(0, import_universal_user_agent.getUserAgent)()}`\n    }\n  });\n  const state = Object.assign(\n    {\n      request,\n      cache: getCache()\n    },\n    options,\n    options.installationId ? { installationId: Number(options.installationId) } : {},\n    {\n      log,\n      oauthApp: (0, import_auth_oauth_app.createOAuthAppAuth)({\n        clientType: \"github-app\",\n        clientId: options.clientId || \"\",\n        clientSecret: options.clientSecret || \"\",\n        request\n      })\n    }\n  );\n  return Object.assign(auth.bind(null, state), {\n    hook: hook.bind(null, state)\n  });\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  createAppAuth,\n  createOAuthUserAuth\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}